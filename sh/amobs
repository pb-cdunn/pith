#!/usr/bin/env python2.7
"""Angry mobs.

Wrap mobs by setting 'altsrc' for git packages.

Run this from 'smrtanalysis' directory. Mobs expects packages to
be in directories like these:

    smrtanalysis/altsrc/pbdagcon
    smrtanalysis/altsrc/blasr
    smrtanalysis/altsrc/blasr_libcpp/alignment
    smrtanalysis/altsrc/blasr_libcpp/hdf
    smrtanalysis/altsrc/blasr_libcpp/pbdata
    ...

To create symlinks from those directories, use 'ws.py'.
"""
from __future__ import print_function
from pipes import quote
import argparse
import contextlib
import json
import os
import re
import shlex
import signal
import subprocess
import sys
import warnings

# This should derive from a p4 file someday.
ALTSRC_MAP = {
    'pbdagcon': 'altsrc/pbdagcon',
    'pbcommand': 'altsrc/pbcommand',
    'blasr': 'altsrc/blasr',
    'libblasr': 'altsrc/blasr_libcpp/alignment',
    'libpbdata': 'altsrc/blasr_libcpp/pbdata',
    'libpbihdf': 'altsrc/blasr_libcpp/hdf',
}

def system(call, dry_run=False):
    print(call)
    if not dry_run:
        subprocess.check_call(call, shell=True)
def getaltsrcmods():
    mods = list()
    for (mod, path) in ALTSRC_MAP.items():
        print(mod, path)
        if os.path.exists(path):
            mods.append(mod)
    return mods
def parseargs(args):
    """Someday, there might be more arguments.
    """
    description = 'Wrap "mobs" with altsrc for all the modules currently under the "altsrc" directory.'
    parser = argparse.ArgumentParser(
            description=description)
    parser.add_argument('--mobs', default='build/3.x/mobs',
        help='Path to mobs executable. [default=%(default)s]')
    parser.add_argument('-n', '--dry-run', action='store_true',
        help='Show the command we would run.')
    parser.add_argument('margs', nargs='*',
        help='Arguments to pass along to mobs. Generally, you should precede these with " -- ".')
    return parser.parse_args(args)
def main(prog, *args):
    pargs = parseargs(args)
    mods = getaltsrcmods()
    altsrc_flags = ['{}::modtype=altsrc'.format(mod) for mod in mods]
    margs = [pargs.mobs, '-i'] + altsrc_flags + pargs.margs
    cmd = ' '.join(margs)
    system(cmd, pargs.dry_run)

if __name__ == "__main__":
    main(*sys.argv)
